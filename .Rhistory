rpois?
?()
?rpois
rpois(40,45)
ppois(40,45)
?quinif
?qunif
qunif(o.75)
qunif(0.75)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
temp
0.1+0.4+0.9+1.6
0.75/0.48
sqrt(75)
sqrt(75)/5
?ppois
ppois(10, lamda=15)
ppois(10, lambda=15)
?pnorm
1/12
12/100
19/100
πνρ
pnorm(70, mean=80, sd=10)
qnorm(95, mean=1100, sd=75)
qnorm(0.95, mean=1100, sd=75)
x<-75*75/100
x
qnorm(0.95, mean=1100, sd=x)
qnorm(0.95, mean=1100, sd=56.25)
getwd()
setwd("~/Documents/data science/Reproducible Research/RepData_PeerAssessment1")
dataset <- read.csv("activity.csv")
#cleanup NAs
datac<-na.omit(dataset)
library(dplyr)
daily <- group_by(dataset, date)
#caclulate sums of steps by date
dailysum<- summarize(daily,total_steps= sum(steps, na.rm=TRUE))
#make a histogram : I will choose a binwidth that is at a scale relevant to the daily sum of steps, by choice 1000
library(ggplot2)
ggplot(dailysum, aes(x=total_steps, fill="red")) + geom_histogram(binwidth =1000) +labs( title="Total Daily Steps Histogram", y="Frequency in dataset", x="# Total Daily Steps")
mean(dailysum$total_steps)
median(dailysum$total_steps)
mn<- mean(dailysum$total_steps) ; paste("mean =", mn)
md<- median(dailysum$total_steps); paste("median =", md)
round(mn, 2)
mn<- round(mn, 2);paste("mean =", mn)
interval <- group_by(dataset,as.factor( interval)) %>% summarize(daily_avg_steps=mean(steps, na.rm=TRUE))
names(interval)[1]<-"interval_class"
plot(interval$interval_class, interval$daily_avg_steps,main="Activity Pattern, across a day (avg)", ylab="# of Steps, on average",xlab="5 minute interval" , type="l")
max_act_int<- interval$interval_class[interval$daily_avg_steps==max(interval$daily_avg_steps)]
droplevels(max_act_int)
paste("max interval =", max_act_int)
paste("max interval =", droplevels(max_act_int))
x<- sum(is.na(dataset))
paste("# of NAs =", x)
index<- which(is.na(dataset))
i<-1
dailymean<- summarize(daily,avg_steps= mean(steps, na.rm=TRUE))
# are there any NAs still remaining in the table of means? Making an index with NA positions in the dataframe of daily means, "index2"
index2<- which(is.na(dailymean[,2]))
# yes, so I will replace them with 0
dailymean[index2,2]<-0
#start building the timeseries filled with mean daily values
timeseries<-dataset
for (i in 1:length(index))
{
#making an temporary index ("index3") to match the date for every NA measurement and get the mean for it from the relevant table
index3<-  which(timeseries[index[i],2]==dailymean$date)
timeseries[index[i],1]<-dailymean[index3,2]
}
total_timeseries<- group_by(timeseries,date=as.factor(date)) %>% summarize(total_steps=sum(steps, na.rm=TRUE))
ggplot(total_timeseries, aes(x=total_steps)) + geom_histogram(binwidth =1000) +labs( title="Total Daily Steps Histogram", y="Frequency in dataset", x="# Total Daily Steps")
mnn<- mean(total_timeseries$total_steps); paste("new mean =", round(mnn,2))
mdn<- median(total_timeseries$total_steps); paste("new median =", mdn)
mean_change<- mnn/mn-1
mean_change
mean_change<- (mnn/mn-1)*100 ; paste("mean has changed by ", mean_change, "%")
median_change<- (mdn/md-1)*100; paste("median has changed by ", median_change, "%")
paste("mean has changed by ", round(mean_change,3), "%")
mean_change<- (mnn/mn-1)*100 ; paste("mean has changed by ", round(mean_change,6), "%")
median_change<- (mdn/md-1)*100; paste("median has changed by ", median_change, "%")
w_series<- mutate(timeseries, weekday= weekdays(as.Date(date)), w_class = factor(1 * (weekday =="Saturday" |weekday =="Sunday"),labels = c("weekday", "weekend")))
%>% summarize(avg_steps=mean(steps, na.rm=TRUE))
str(w_series)
w_series<- mutate(timeseries, weekday= weekdays(as.Date(date)), w_class = factor(1 * (weekday =="Saturday" || weekday =="Sunday"),labels = c("weekday", "weekend")))
%>% summarize(avg_steps=mean(steps, na.rm=TRUE))
str(w_series)
su<-which(w_series$weekday=="Sunday")
w_series$w_class[su]
st<-which(w_series$weekday=="Saturday")
w_series$w_class[ss]
w_series$w_class[st]
tue<-which(w_series$weekday=="Tuesday")
w_series$w_class[tue]
ww<- summarize(w_series,avg_steps=mean(steps, na.rm=TRUE))
head(ww)
w_series<- mutate(timeseries, weekday= weekdays(as.Date(date)), w_class = factor(1 * (weekday =="Saturday" || weekday =="Sunday"),labels = c("weekday", "weekend")))
ww<- summarize(w_series,avg_steps=mean(steps, na.rm=TRUE))
head(ww)
ww<- group_by(w_series, w_class)
head(ww)
ww<- group_by(w_series, as.factor(w_class)) %>% summarize(avg_steps=mean(steps, na.rm=TRUE))
head(ww)
ww<- group_by(w_series, as.factor(w_class), as.factor(interval)) %>% summarize(avg_steps=mean(steps, na.rm=TRUE))
head(ww)
ww
ww<- group_by(w_series, w_class=as.factor(w_class), interval=as.factor(interval)) %>% summarize(avg_steps=mean(steps, na.rm=TRUE))
str(ww)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red') +
geom_smooth(method='lm') +
facet_wrap(w_class)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red') +
geom_smooth(method='lm') +
facet_wrap(ww$w_class)
??facet
ggplot(data=ww,aes(x=interval,y=avg_steps, facets=w_class)) +
geom_point(colour='red') +
geom_smooth(method='lm')
?ggplot
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red') +
geom_smooth(method='lm') +
facet_wrap(~ww$w_class)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red') +
geom_smooth(method='lm') +
facet_wrap(~w_class, scales="free")
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red') +
facet_wrap(~w_class, scales="free",  ncol = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red') +
facet_wrap(~w_class, scales="free",  nrow = 2)
?geom_point
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red',  stat = "identity") +
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
stat_density2d(colour='red',  stat = "identity") +
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_density2d(colour='red',  stat = "identity") +
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_density2d(colour='red') +
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red') +geom_density2d()+
facet_wrap(~w_class, scales="free",  nrow = 2)
?geom_*
)
?geom_
??geom_
ggplot2(data=ww,aes(x=interval,y=avg_steps)) +
geom_line(colour='red') +geom_density2d()+
facet_wrap(~w_class, scales="free",  nrow = 2)
library(ggplot2)
ggplot2(data=ww,aes(x=interval,y=avg_steps)) +
geom_line(colour='red') +geom_density2d()+
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_line(colour='red') +geom_density2d()+
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_line(colour='red') +
facet_wrap(~w_class, scales="free",  nrow = 2)
?geom_line
ggplot(data=ww,aes(x=interval,y=avg_steps), geom="line")+
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps), geom="line")+
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps), geom="line")
facet_wrap(~w_class, scales="free",  nrow = 2)
ggplot(data=ww,aes(x=interval,y=avg_steps), geom="line")
ggplot(data=ww,aes(x=interval,y=avg_steps)) +
geom_point(colour='red') +
facet_wrap(~w_class, scales="free",  nrow = 2) +labs( title="Activity Patterns", y="Frequency in dataset", x="# average steps")
